version: '3.8'

services:
  # NOTE: PostgreSQL is managed by Encore automatically
  # Do not add PostgreSQL here - Encore will provision its own container

  # MongoDB (GridFS)
  mongodb:
    image: mongo:7.0
    container_name: vaporform-dev-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: vaporform
      MONGO_INITDB_ROOT_PASSWORD: vaporform_dev_password
      MONGO_INITDB_DATABASE: vaporform
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
    networks:
      - vaporform-dev
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: vaporform-dev-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - vaporform-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: vaporform-dev-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - vaporform-dev
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  vaporform-dev:
    name: vaporform-dev
    driver: bridge

volumes:
  mongodb-data:
    name: vaporform-dev-mongodb-data
  mongodb-config:
    name: vaporform-dev-mongodb-config
  qdrant-data:
    name: vaporform-dev-qdrant-data
  redis-data:
    name: vaporform-dev-redis-data
